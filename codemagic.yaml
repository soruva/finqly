workflows:
  android-release:
    name: Build Android Release
    max_build_duration: 30
    environment:
      flutter: stable
      groups:
        - finqly_signing
    cache:
      cache_paths:
        - ~/.pub-cache
        - ~/.gradle/caches
        - ~/.gradle/wrapper

    scripts:
      - name: Sanity check required assets
        script: |
          set -e
          for f in \
            assets/images/finqly_logo.png \
            assets/images/badges/optimistic.png \
            assets/images/badges/neutral.png \
            assets/images/badges/worried.png \
            assets/images/badges/confused.png \
            assets/images/badges/cautious.png \
            assets/images/badges/excited.png
          do
            [ -f "$f" ] || { echo "::error:: Missing required asset: $f"; exit 1; }
          done
          echo "All required assets exist."

      - name: Restore keystore from env (robust)
        script: |
          set -euo pipefail
          : "${CM_KEYSTORE_BASE64:?CM_KEYSTORE_BASE64 missing}"
          : "${CM_KEYSTORE_PASSWORD:?CM_KEYSTORE_PASSWORD missing}"
          : "${CM_KEY_ALIAS:?CM_KEY_ALIAS missing}"
          : "${CM_KEY_PASSWORD:?CM_KEY_PASSWORD missing}"
          CLEAN_B64="$(printf '%s' "$CM_KEYSTORE_BASE64" | tr -d '\r\n')"
          if printf '%s' "$CLEAN_B64" | base64 --decode > /tmp/my-release-key.jks 2>/dev/null; then :;
          elif printf '%s' "$CLEAN_B64" | base64 -d > /tmp/my-release-key.jks 2>/dev/null; then :;
          else
            echo "Failed to decode CM_KEYSTORE_BASE64"; exit 1
          fi
          export CM_KEYSTORE="/tmp/my-release-key.jks"
          echo 'CM_KEYSTORE=/tmp/my-release-key.jks' >> "$CM_ENV"
          keytool -list -v -keystore "$CM_KEYSTORE" -storepass "$CM_KEYSTORE_PASSWORD" > /dev/null || { echo "::error:: wrong storepass"; exit 1; }
          echo "[signing] keystore restored and verified (storepass)."

      - name: Ensure clean key.properties
        script: |
          set -euo pipefail
          rm -f android/key.properties || true
          mkdir -p android

      - name: Write android/key.properties
        script: |
          set -euo pipefail
          cat > android/key.properties <<EOF
          storeFile=${CM_KEYSTORE}
          storePassword=${CM_KEYSTORE_PASSWORD}
          keyAlias=${CM_KEY_ALIAS}
          keyPassword=${CM_KEY_PASSWORD}
          EOF
          echo "Wrote android/key.properties:"
          sed 's/=.*/=*** (redacted)/' android/key.properties

      - name: Flutter pub get
        script: flutter pub get

      - name: Build AAB (release)
        script: |
          set -e
          mkdir -p build/symbols
          flutter build appbundle --release \
            --tree-shake-icons \
            --split-debug-info=build/symbols

      - name: Verify AAB signature
        script: |
          set -e
          test -f build/app/outputs/bundle/release/app-release.aab
          jarsigner -verify -verbose -certs build/app/outputs/bundle/release/app-release.aab | sed -n '1,60p'
          echo "[signing] AAB signature verified."

    artifacts:
      - build/app/outputs/bundle/release/app-release.aab
      - build/symbols/**
